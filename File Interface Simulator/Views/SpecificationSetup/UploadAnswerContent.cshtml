@model File_Interface_Simulator.Models.AnswerContentViewModel

@{
    ViewBag.Title = "Upload answer content";
    string browser = Request.Browser.Browser;
}

<h1>@ViewBag.Title</h1>

@if (browser.Equals("Chrome"))
{
    <p class="errorMessage">This functionality is not supported in Google Chrome. Please use a different browser.</p>
}
else
{
using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Path">Path (.csv)</label>
            <div class="col-md-10">
                <input type="file" name="Path" />
            </div>
        </div>

        @{
            List<SelectListItem> fileSpecifications = new List<SelectListItem>();

            foreach (string fileSpecification in Model.FileSpecifications)
            {
                fileSpecifications.Add(new SelectListItem
                {
                    Text = fileSpecification,
                    Value = fileSpecification
                });
            }
        }

        <div class="form-group">
            <label class="control-label col-md-2" for="FileSpecification">File specification</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FileSpecification, fileSpecifications, "Choose a File Specification", new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    </div>
    <span class="errorMessage">@ViewBag.Error</span>
    <div class="form-group">
        <div class="col-md-10">
             <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

                }
            }


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}