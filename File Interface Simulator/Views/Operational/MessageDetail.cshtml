@model File_Interface_Simulator.Models.MessageDetailViewModel

@{
    ViewBag.Title = "Message";
}

<h1>@ViewBag.Title: @Model.MessageId</h1>
<hr />
<div>
    <dl class="dl-horizontal">
        <dt class="control-label">
            Creation Date
        </dt>

        <dd style="font-weight: bold">
            @Html.DisplayFor(model => model.CreationDate)
        </dd>

        <dt class="control-label">
            Message State
        </dt>

        <dd style="font-weight: bold">
            @Html.DisplayFor(model => model.MessageState)
        </dd>

        <dt class="control-label">
            @Html.DisplayNameFor(model => model.Type)
        </dt>

        <dd style="font-weight: bold">
            @Html.DisplayFor(model => model.Type)
        </dd>

        <dt class="control-label">
            Specification file
        </dt>

        <dd style="font-weight: bold">
            @Html.DisplayFor(model => model.SpecificationFile)
        </dd>

        <dt class="control-label">
            Error count
        </dt>

        <dd style="font-weight: bold">
            @Model.AmountOfErrors
        </dd>

    </dl>
</div>

@if (Model.AmountOfHeaderErrors > 0)
{
    <h1><img src="/images/minus_icon.png" class="btn btn-default min-btn" onclick="collapse(this,'header')" /> Header (@Model.HeaderFields.Count()) <img src="~/images/exclamation_mark_icon.png" title="@Model.AmountOfHeaderErrors error(s)" /></h1>
}
else
{
    <h1><img src="/images/minus_icon.png" class="btn btn-default min-btn" onclick="collapse(this,'header')" /> Header (@Model.HeaderFields.Count()) </h1>
}

<hr />

<span class="errorMessage">@Model.HeaderError</span>

<div id="header">
    <table class="table">
        <tr>
            <th>
                Code
            </th>
            <th>
                Content
            </th>
            <th>
                Datatype
            </th>
            <th>
                Size
            </th>
        </tr>
        @foreach (var headerField in Model.HeaderFields)
        {
            if (!String.IsNullOrEmpty(headerField.ErrorMessage))
            {
                <tr style="background-color: RGBA(255,0,0,0.5)">
                    <td>
                        @Html.DisplayFor(item => headerField.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(item => headerField.Content)
                    </td>
                    <td>
                        @Html.DisplayFor(item => headerField.Datatype)
                    </td>
                    <td>
                        @Html.DisplayFor(item => headerField.Size)
                    </td>
                    <td style="background-color: white">
                        <span class="errorMessage"><img src="~/images/exclamation_mark_icon.png" /> @Html.DisplayFor(item => headerField.ErrorMessage)</span>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(item => headerField.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(item => headerField.Content)
                    </td>
                    <td>
                        @Html.DisplayFor(item => headerField.Datatype)
                    </td>
                    <td>
                        @Html.DisplayFor(item => headerField.Size)
                    </td>
                </tr>
            }
        }
    </table>
</div>

@for (int i = 0; i < Model.Transactions.Count(); i++)
{

    if (Model.Transactions.ElementAt(i).AmountOfErrors > 0)
    {
        <h1><img src="~/images/minus_icon.png" class="btn btn-default min-btn" onclick="collapse(this,'transaction@(i + 1)')" /> Transaction @(i + 1) <img src="~/images/exclamation_mark_icon.png" title="@Model.Transactions.ElementAt(i).AmountOfErrors error(s)" /></h1>
    }
    else
    {
        <h1><img src="~/images/minus_icon.png" class="btn btn-default min-btn" onclick="collapse(this,'transaction@(i + 1)')" /> Transaction @(i + 1)</h1>
    }
    <hr />

    <div id="transaction@(i+1)">

        @if (Model.Transactions.ElementAt(i).AmountOfGroupErrors > 0)
        {
            <h2><img src="~/images/minus_icon.png" class="btn btn-default min-btn" onclick="collapse(this,'groups@(i+1)')" /> Groups (@Model.Transactions.ElementAt(i).Groups.Count()) <img src="~/images/exclamation_mark_icon.png" title="@Model.Transactions.ElementAt(i).AmountOfGroupErrors error(s)" /></h2>
        }
        else
        {
            <h2><img src="~/images/minus_icon.png" class="btn btn-default min-btn" onclick="collapse(this,'groups@(i+1)')" /> Groups (@Model.Transactions.ElementAt(i).Groups.Count()) </h2>
        }
        <hr />

        <span class="errorMessage">@Model.Transactions.ElementAt(i).GroupsErrorMessage</span>

        <div id="groups@(i+1)">
            <table class="table">
                <tr>
                    <th>
                        Code
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        Count
                    </th>
                    <th>
                        Am. Fields
                    </th>
                    <th>
                        Level
                    </th>
                </tr>
                @foreach (var group in Model.Transactions.ElementAt(i).Groups)
                {
                    if (String.IsNullOrEmpty(group.ErrorMessage))
                    {
                        <tr onclick="goToGroup('@group.Id')" class="clickable">
                            <td>
                                @Html.DisplayFor(item => group.Code)
                            </td>
                            <td>
                                @Html.DisplayFor(item => group.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(item => group.Count)
                            </td>
                            <td>
                                @Html.DisplayFor(item => group.AmountOfFields)
                            </td>
                            <td>
                                @Html.DisplayFor(item => group.Level)
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr style="background-color: RGBA(255,0,0,0.5)" onclick="goToGroup('@group.Id')" class="clickable">
                            <td>
                                @Html.DisplayFor(item => group.Code)
                            </td>
                            <td>
                                @Html.DisplayFor(item => group.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(item => group.Count)
                            </td>
                            <td>
                                @Html.DisplayFor(item => group.AmountOfFields)
                            </td>
                            <td>
                                @Html.DisplayFor(item => group.Level)
                            </td>
                            <td style="background-color: white">
                                <span class="errorMessage"><img src="~/images/exclamation_mark_icon.png" /> @Html.DisplayFor(item => group.ErrorMessage)</span>
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>

        @if (Model.Transactions.ElementAt(i).AmountOfFieldErrors > 0)
        {
            <h2><img src="~/images/minus_icon.png" class="btn btn-default min-btn" onclick="collapse(this,'fields@(i + 1)')" /> Fields (@Model.Transactions.ElementAt(i).Fields.Count()) <img src="~/images/exclamation_mark_icon.png" title="@Model.Transactions.ElementAt(i).AmountOfFieldErrors errors"/></h2>
        }
        else
        {
            <h2><img src="~/images/minus_icon.png" class="btn btn-default min-btn" onclick="collapse(this,'fields@(i + 1)')" /> Fields (@Model.Transactions.ElementAt(i).Fields.Count())</h2>
        }
        <hr />
        <div id="fields@(i+1)">
            <table class="table">
                <tr>
                    <th>
                        Code
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Optional
                    </th>
                    <th>
                        Values
                    </th>
                    <th>
                        Datatype
                    </th>
                    <th>
                        Size
                    </th>
                    <th>
                        Format
                    </th>
                    <th>
                        Group
                    </th>
                    <th>
                        Level
                    </th>
                </tr>
                    @foreach (var field in Model.Transactions.ElementAt(i).Fields)
                    {
                        if (String.IsNullOrEmpty(field.ErrorMessage))
                        {
                            <tr onclick="goToField('@field.Id')" class="clickable">
                                <td>
                                    @Html.DisplayFor(item => field.Code)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Optional)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Value)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Datatype)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Size)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Format)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Group)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Level)
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr style="background-color: RGBA(255,0,0,0.5)" onclick="goToField('@field.Id')" class="clickable">
                                <td>
                                    @Html.DisplayFor(item => field.Code)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Optional)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Value)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Datatype)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Size)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Format)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Group)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => field.Level)
                                </td>
                                <td style="background-color: white">
                                    <span class="errorMessage"><img src="~/images/exclamation_mark_icon.png" /> @Html.DisplayFor(item => field.ErrorMessage)</span>
                                </td>
                            </tr>
                        }
                    }
            </table>
        </div>
    </div>
}

@section Scripts {
    <script src="~/Scripts/Operational/messageDetail.js"></script>
}

<a href="@Url.Action("MessageOverview", "Operational")" class="btn btn-default">Back to Overview</a>